<?php
use ZendService\LiveDocx\MailMerge;

class Livedocx {

	private static $initiated = false;

	public static function init() {
		if ( ! self::$initiated ) {
			self::init_hooks();
		}
	}

	/**
	 * Initializes WordPress hooks
	 */
	private static function init_hooks() {
		self::$initiated = true;
		add_shortcode( 'livedocx_demo_form', array( 'Livedocx', 'livedocx_demo_form' ) );
	}

//*********   this is where the document is created

	public static function livedocx_demo_form($name, $mail)
	{
		//$templateName = 'template-2-text-fields.doc';
		$templateName = 'online-template-trial.docx';
		$mailMerge = new MailMerge();

		$mailMerge->setUsername(LIVEDOCX_FREE_USERNAME)
		          ->setPassword(LIVEDOCX_FREE_PASSWORD)
		          ->setService (MailMerge::SERVICE_FREE);

		if(!$mailMerge->templateExists($templateName)) {
			$mailMerge->uploadTemplate(
				LIVEDOCX__PLUGIN_DIR . 'templates' . DIRECTORY_SEPARATOR . $templateName
			);
		}

		$mailMerge->setRemoteTemplate($templateName);

		/*$mailMerge->assign('software', $name)
		          ->assign('name', $mail);*/
		
		$mailMerge->assign('software', $name)
		          ->assign('name', $mail)
		          ->assign('newField1', $mail)
		          ->assign('name22', $mail);          

		$mailMerge->createDocument();
		$document = $mailMerge->retrieveDocument('pdf');
		$livedocxPDF = get_temp_dir().DIRECTORY_SEPARATOR.'document.pdf';
		file_put_contents($livedocxPDF, $document);

// ********************** SEND EMAIL

		wp_mail(
			$mail,
			'Livedocx generated PDF',
			'Is just demo message with attached PDF generated by Livedocx template',
			null,
			array($livedocxPDF)
		);

		unlink($livedocxPDF);
		$mailMerge->deleteTemplate($templateName);
		return Livedocx::view( 'demo_sent' );
	}

	public static function view( $name, array $args = array() ) {
		$args = apply_filters( 'livedocx_view_arguments', $args, $name );
		
		foreach ( $args AS $key => $val ) {
			$$key = $val;
		}
		
		load_plugin_textdomain( 'livedocx' );

		$file = LIVEDOCX__PLUGIN_DIR . 'views/'. $name . '.php';

		ob_start();
		include( $file );
		return ob_get_clean();
	}

	/**
	 * Attached to activate_{ plugin_basename( __FILES__ ) } by register_activation_hook()
	 * @static
	 */
	public static function plugin_activation() {
	}

	/**
	 * Removes all connection options
	 * @static
	 */
	public static function plugin_deactivation( ) {
		//tidy up
	}

	public static function log( $akismet_debug ) {
		if ( defined( 'WP_DEBUG_LOG' ) && WP_DEBUG_LOG )
			error_log( print_r( compact( 'akismet_debug' ), 1 ) ); //send message to debug.log when in debug mode
	}
}